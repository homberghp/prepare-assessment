#!/usr/bin/perl -w
my ($cmd,$p1,$p2,$rootmp,$homemp,$stick,@parts);
$cmd = '/sbin/blkid';

sub doCmd($);
open(PROC,qq($cmd | grep EXAM|)) or die qq(cannot use blkid\n);
while(<PROC>){
    chomp;
    (@parts)= split/\s+/;
    if ($parts[0] =~ /^\/dev\/(sd.+)?:/ ) {
	$p1=$1;
	$stick=$parts[1];
	$stick =~ m/LABEL="(.+)?"/;
	$stick=$1;
	print qq(dev $p1 $stick\n);
	$p2=$p1;
	$p2 =~ s/1$/2/;

	# make mount points based on label
	$rootmp=qq(/media/usb/${stick});
	$homemp=qq(/media/usb/home-rw-${stick});
	@cmd=('mkdir', '--parents', $rootmp);
	doCmd(\@cmd);
	@cmd=('mount', "/dev/${p1}", $rootmp);
	doCmd(\@cmd);
	@cmd=('mkfs.ext2', '-q', '-F', "$rootmp/casper-rw");
	doCmd(\@cmd);
	@cmd=('mkfs.ext2','-q','-L','home-rw',"/dev/${p2}");
	doCmd(\@cmd);
	@cmd=('umount', "/dev/${p1}");
	doCmd(\@cmd);
    }
    @cmd=('paplay','/home/prepareassessment/bin/tng-picard-engage.ogg' );
}

exit(0);
sub doCmd($){
    my $aref=$_[0];
    print qq(@$aref\n);
    system(@cmd) == 0 or die "system @cmd failed $?\n";
}
